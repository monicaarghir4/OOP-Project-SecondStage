Starting audit...
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\back\Back.java:14:5: Class 'Back' looks like designed for extension (can be subclassed), but the method 'getPagesStack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Back' final or making the method 'getPagesStack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\back\Back.java:18:5: Class 'Back' looks like designed for extension (can be subclassed), but the method 'setPagesStack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Back' final or making the method 'setPagesStack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\back\Back.java:22:5: Class 'Back' looks like designed for extension (can be subclassed), but the method 'backAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Back' final or making the method 'backAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\back\Back.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Add.java:4:13: Using the '.*' form of import should be avoided - input.*. [AvoidStarImport]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Add.java:8:5: Class 'Add' looks like designed for extension (can be subclassed), but the method 'databaseAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Add' final or making the method 'databaseAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Add.java:9:32: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Add.java:9:45: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Add.java:9:63: Parameter actionInput should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Add.java:24: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Database.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\DatabaseFactory.java:4:5: Class 'DatabaseFactory' looks like designed for extension (can be subclassed), but the method 'getDatabase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseFactory' final or making the method 'getDatabase' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\DatabaseFactory.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Delete.java:4:13: Using the '.*' form of import should be avoided - input.*. [AvoidStarImport]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Delete.java:8:5: Class 'Delete' looks like designed for extension (can be subclassed), but the method 'databaseAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Delete' final or making the method 'databaseAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Delete.java:9:32: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Delete.java:9:45: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\database\Delete.java:9:63: Parameter actionInput should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\BuyTokens.java:28: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\Login.java:4:13: Using the '.*' form of import should be avoided - input.*. [AvoidStarImport]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\RateTheMovie.java:51: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\RateTheMovie.java:57: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\Subscribe.java:11:5: Class 'Subscribe' looks like designed for extension (can be subclassed), but the method 'onPageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Subscribe' final or making the method 'onPageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\Subscribe.java:12:30: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\Subscribe.java:12:43: Parameter actionInput should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\Subscribe.java:12:68: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\actiontypes\on\Watch.java:4:13: Using the '.*' form of import should be avoided - input.*. [AvoidStarImport]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:17:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:25:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:29:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:29:33: Parameter deletedMovie should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:33:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:37:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:37:31: Parameter addedMovie should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:41:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\ActionInput.java:41:36: Parameter subscribedGenre should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Input.java:24:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getBack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getBack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Input.java:28:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setBack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setBack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Input.java:28:25: Parameter back should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Notifications.java:7:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Notifications.java:11:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Notifications.java:11:30: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Notifications.java:15:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Notifications.java:19:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\Notifications.java:19:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\UserInput.java:25:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\UserInput.java:29:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\UserInput.java:33:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\input\UserInput.java:37:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\Main.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\output\OutputNotifications.java:8:5: Class 'OutputNotifications' looks like designed for extension (can be subclassed), but the method 'createOutputNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputNotifications' final or making the method 'createOutputNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\output\OutputNotifications.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\output\OutputRecommendation.java:9:5: Class 'OutputRecommendation' looks like designed for extension (can be subclassed), but the method 'createOutputRecommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputRecommendation' final or making the method 'createOutputRecommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\output\OutputRecommendation.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\output\OutputRecommendation.java:9:44: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\output\OutputRecommendation.java:9:57: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\Recommendation.java:14:5: Class 'Recommendation' looks like designed for extension (can be subclassed), but the method 'recommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommendation' final or making the method 'recommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\Recommendation.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\Recommendation.java:14:32: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\Recommendation.java:14:45: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\Recommendation.java:48: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\Recommendation.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\Recommendation.java:69:67: Parameter t should be final. [FinalParameters]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\SolveActions.java:5:8: Unused import - actiontypes.change.Movies. [UnusedImports]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\SolveActions.java:13:8: Unused import - input.MovieInput. [UnusedImports]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\SolveActions.java:14:8: Unused import - input.Notifications. [UnusedImports]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\SolveActions.java:16:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\solving\SolveActions.java:51:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\margh\IdeaProjects\proiect2\.\src\verifyerrors\VerifyErrors.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
Audit done.
Checkstyle ends with 70 errors.
